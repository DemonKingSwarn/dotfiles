;; Variables
(defpoll time :interval "20s" "date +\" %a %H:%M\"")
(defpoll clock_time :interval "5m" "date +\%I")
(defpoll clock_minute :interval "5s" "date +\%M")
(defpoll clock_date :interval "10h" "date '+%d/%m'")
(defpoll calendar_day :interval "20h" "date '+%d'")
(defpoll calendar_year :interval "20h" "date '+%Y'")

(deflisten volume `zsh ./scripts/audio --get-volicon`)
(deflisten network `zsh ./scripts/network --icon`)
(deflisten battery `zsh ./scripts/battery --icon`)
(deflisten workspace `zsh ./scripts/workspaces`)

(defvar eww "/usr/bin/eww -c $HOME/.config/eww/bar")


;; widgets
(defwidget workspaces []
  (literal :content workspace))

(defwidget left []
    (box :orientation "h"
         :space-evenly false
         :halign "start"
         :class "left_modules"
     (workspaces)))

(defwidget cal []
    (box :class "cal" :orientation "v"
     (box :class "cal-in"
      (calendar :class "cal"
                :day calendar_day
                :year calendar_year))))

(defwidget clock_module []
    (box :class "module" :halign "center"
      (button :class "clock_date_class"
             :onclick "zsh ../scripts/pop calendar"
             :onmiddleclick `(alacritty -e calcurse &)`
       (label :text "${time}"))))

(defwidget center []
    (box :orientation "h"
         :space-evenly false
         :halign "center"
         :class "center_modules"
     (clock_module)))

;;Make individual buttons clickable
;;network
;;time
;;battery

(defwidget sysboard []
  (box :halign "end"
      (button :class "systray"
              :onclick "zsh ../scripts/launch_dashboard"
              :onmiddleclick "zsh ../scripts/audio --toggle-vol"
       (label :text "${network} ${volume} ${battery}"))))

(defwidget right []
    (box :orientation "h"
         :space-evenly false
         :halign "end"
         :class "right_modules"
     (sysboard)))

(defwidget bar_1 []
    (box :class "bar_class"
         :orientation "h"
     (left)
     (center)
     (right)))


;; Window
(defwindow calendar
    :monitor 0
    :geometry (geometry :x "-20px"
                        :y "1%"
                        :anchor "top center"
                        :width "270px"
                        :height "60px")
 (cal))

(defwindow bar
    :monitor 0
    :windowtype "dock"
    :geometry (geometry :width "100%"
                        :anchor "top center")
    :exclusive true
 (bar_1))
