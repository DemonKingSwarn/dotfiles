#!/bin/sh

VERSION="2.0.0"

c_red="\033[1;31m"
c_green="\033[1;32m"
c_yellow="\033[1;33m"
c_blue="\033[1;34m"
c_magenta="\033[1;35m"
c_cyan="\033[1;36m"
c_reset="\033[0m"

download_dir="$HOME/Downloads"

config_dir="${XDG_CONFIG_HOME:-$HOME/.config}"
[ -e "$config_dir/notflix/notflixrc" ] && . "$config_dir/notflix/notflixrc"

err() {
    printf "${c_red}%s${c_reset}\n" "$*" >&2
}

die() {
    err "$*"
    exit 1
}

inf() {
    printf "${c_green}%s${c_reset}\n" "$1" "$2"
}

dep_ch() {
    for dep; do
        if ! command -v "$dep" >/dev/null ; then
            err "Program \"$dep\" not found. Please install it.\n"
            if [ "$dep" = "peerflix" ] 
            then
                die "To install peerflix do npm install peerflix -g."
            fi
        fi
    done
}

get_url() {
    printf "\33[2K\r${c_cyan}Searching query..\n"
	search=$(echo "${name}" | sed 's/ /\%20/g')
    torrent=$(curl -s "$baseurl/search/${search}/1/99/200" | grep -Eo "/torrent/[0-9]{8}/[a-zA-Z0-9._-]*" | head -n 1)
	magnet=$(curl -s "$baseurl$torrent" | grep -Eo "magnet:\?xt=urn:btih:[a-zA-Z0-9]*" | head -n 1)
    if [ -z "$magnet" ]
    then
        die "Can't find the show/movie!"
    fi
    choose
}

stream() {
	peerflix -l -k "${magnet}"
}

download() {
	printf "${c_cyan}Downloading %s${c_reset}\n" "$2"
    aria2c --summary-interval=0 -x 16 -s 16 "${magnet}" --dir="${download_dir}" --download-result=hide
}

choose() {
    printf "${c_red}(s) stream${c_reset}\n${c_yellow}(d) download${c_reset}\n${c_blue}(q) quit${c_reset}\n"
	printf "${c_magenta}>${c_reset} " && read -r choice
    case $choice in
        s) stream ;;
        d) download ;;
        q) exit 0 ;;
        *) err "Invalid choice" && exit 1 ;;
    esac
}

trap "exit 0" INT HUP

baseurl="$(curl -s -L -o /dev/null -w "%{url_effective}\n" https://piratebay.party)"
[ -z "$1" ] && printf "%s" "Search: " && read -r name || name=$(printf "$*")

get_url

dep_ch "sed" "curl" "grep" "peerflix" "aria2c"
